# -*- coding: utf-8 -*-
"""[CS 4650.01] Project 1: Stack Overflow Insights

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iakJLmnH-wAgkOUHZiCl426C7O0vuJqc
"""

# upload survey_results_public.csv

import pandas as pd
import matplotlib.pyplot as plt

from google.colab import files
uploaded = files.upload()

# Contributing to Open Source

df = pd.read_csv("survey_results_public.csv")
df = df.fillna(0)
df['OpenSourcer'].value_counts().plot(kind='barh')

# Coding as a Hobby

df = pd.read_csv("survey_results_public.csv")
hobbyist = df["Hobbyist"]
yesCount = 0
noCount = 0
for answer in hobbyist:
  if answer == "Yes":
    yesCount = yesCount + 1
  else:
    noCount = noCount + 1

df = pd.Series([yesCount, noCount], index = ["Yes","No"], name = "Code as a Hobby")

df.plot.bar(subplots=True)

# How Many Developers are Students?

df = pd.read_csv("survey_results_public.csv")
student = df["Student"]
yesFull = 0
yesPart = 0
no = 0
for answer in student:
  if answer == "Yes, full-time":
    yesFull = yesFull + 1
  if answer == "Yes, part-time":
    yesPart = yesPart + 1
  else:
    no = no + 1

df = pd.Series([yesFull, yesPart, no], index = ["Yes, full-time", "Yes, part-time", "No"], name = "Developers as Students")

df.plot.bar(subplots=True)

# Families and IT Support
# Are you the IT Support Person for your family?

df = pd.read_csv("survey_results_public.csv")
df['ITperson'].value_counts().plot(kind='barh')

#Developers' Primary Operating Systems

df = pd.read_csv("survey_results_public.csv")
df['OpSys'].value_counts().plot(kind='barh')

#Employment Status

df = pd.read_csv("survey_results_public.csv")
df['Employment'].value_counts().plot(kind='barh')

# Education Level

df = pd.read_csv("survey_results_public.csv")
df['EdLevel'].value_counts().plot(kind='barh')

# How Do Developers Feel About Their Careers and Jobs?

df = pd.read_csv("survey_results_public.csv")
df['JobSat'].value_counts().plot(kind='barh')

#Job Search Status

df = pd.read_csv("survey_results_public.csv")
df['JobSeek'].value_counts().plot(kind='barh')

# How Long Ago Did Developers Last Change Jobs?

df = pd.read_csv("survey_results_public.csv")
df['LastHireDate'].value_counts().plot(kind='barh')

#How Often Do Developers Work Remotely?

df = pd.read_csv("survey_results_public.csv")
df['WorkRemote'].value_counts().plot(kind='barh')

# Visiting Stack Overflow


df = pd.read_csv("survey_results_public.csv")
df['SOVisitFreq'].value_counts().plot(kind='barh')

#Finding Answers on Stack Overflow

df = pd.read_csv("survey_results_public.csv")
df['SOFindAnswer'].value_counts().plot(kind='barh')

# How Often Do Developers Participate on Stack Overflow?

df = pd.read_csv("survey_results_public.csv")
df['SOHowMuchTime'].value_counts().plot(kind='barh')

#Average age of partipants from major countries

df = pd.read_csv("survey_results_public.csv")

country = df.groupby(["Country"])["Age"]

UnitedStatesAge = country.get_group("United States").mean()
AustraliaAge = country.get_group("Australia").mean()
ChinaAge = country.get_group("China").mean()
CanadaAge = country.get_group("Canada").mean()
IndiaAge = country.get_group("India").mean()

countryList = ["United States", "Australia", "China", "Canada", "India"]
countryAgeList = [UnitedStatesAge ,AustraliaAge,ChinaAge,CanadaAge,IndiaAge]

df = pd.DataFrame({"Country" : countryList, "Country's Average Age" : countryAgeList})
ax = df.plot.bar(x = "Country")
for p in ax.patches:
  ax.annotate("%.2f" % p.get_height(), (p.get_x() + p.get_width() / 2., p.get_height()), ha='center', va='center', xytext=(0, -50), textcoords='offset points')

# Top Race and Ethnicity
df = pd.read_csv("survey_results_public.csv")
ethnicity = df["Ethnicity"].dropna(axis = 0, how ='any')
unique = ethnicity.tolist()
myList = []

for i in unique:
  temp = i.split(";")
  for j in temp:
    myList.append(j)
  
df = pd.Series(myList)
df.value_counts().plot(kind="barh")

#df['Ethnicity'].value_counts()[:10].plot(kind='barh')

#Reason for Visit
df = pd.read_csv("survey_results_public.csv")
visitFor = df["SOVisitTo"].dropna(axis = 0, how ='any')
unique = visitFor.tolist()

myList = []

for i in unique:
  temp = i.split(";")
  for j in temp:
    myList.append(j)
  
df = pd.Series(myList)
df.value_counts().plot(kind="barh")

#Developer Type
df = pd.read_csv("survey_results_public.csv")
devTypes = df["DevType"].dropna(axis = 0, how ='any')
unique = devTypes.tolist()

myList = []

for i in unique:
  temp = i.split(";")
  for j in temp:
    myList.append(j)
  
df = pd.Series(myList)
df.value_counts().plot(kind="barh")

#Most Important Job Factors 

df = pd.read_csv("survey_results_public.csv")

jobFactor = df["JobFactors"].dropna(axis = 0, how ='any')
unique = jobFactor.tolist()


myList = []

for i in unique:
  temp = i.split(";")
  for j in temp:
    myList.append(j)
  
df = pd.Series(myList)
df.value_counts().plot(kind="barh")

#Top Platforms 

df = pd.read_csv("survey_results_public.csv")
df['PlatformWorkedWith'].value_counts()[:20].plot(kind='barh')
platform = df["PlatformWorkedWith"].dropna(axis = 0, how ='any')
unique = platform.tolist()


myList = []

for i in unique:
  temp = i.split(";")
  for j in temp:
    myList.append(j)
  
df = pd.Series(myList)
df.value_counts().plot(kind="barh")

# Top Databases

df = pd.read_csv("survey_results_public.csv")
df['DatabaseWorkedWith'].value_counts()[:20].plot(kind='barh')
database = df["DatabaseWorkedWith"].dropna(axis = 0, how ='any')
unique = database.tolist()


myList = []

for i in unique:
  temp = i.split(";")
  for j in temp:
    myList.append(j)
  
df = pd.Series(myList)
df.value_counts().plot(kind="barh")

#Top WebFrames
df = pd.read_csv("survey_results_public.csv")
df['WebFrameWorkedWith'].value_counts()[:20].plot(kind='barh')
webFrame = df["WebFrameWorkedWith"].dropna(axis = 0, how ='any')
unique = webFrame.tolist()


myList = []

for i in unique:
  temp = i.split(";")
  for j in temp:
    myList.append(j)
  
df = pd.Series(myList)
df.value_counts().plot(kind="barh")

#Genders 
df = pd.read_csv("survey_results_public.csv")
df['Gender'].value_counts().plot(kind='barh')
gender = df["Gender"].dropna(axis = 0, how ='any')
unique = gender.tolist()


myList = []

for i in unique:
  temp = i.split(";")
  for j in temp:
    myList.append(j)
  
df = pd.Series(myList)
df.value_counts().plot(kind="barh")

#Top Used Languages
df = pd.read_csv("survey_results_public.csv")

language = df["LanguageWorkedWith"].dropna(axis = 0, how ='any')
unique = language.tolist()


myList = []

for i in unique:
  temp = i.split(";")
  for j in temp:
    myList.append(j)
  
df = pd.Series(myList)
df.value_counts().plot(kind="barh")

#box graph of United States Salary
df = pd.read_csv("survey_results_public.csv")
america = df.groupby(["Country"])["ConvertedComp"]

america = america.get_group("United States").dropna()
america = america[america < 200000]
america = america[america > 20000]
mylist = []

for i in america:
  mylist.append(i)

df = pd.DataFrame(mylist, columns = ["United States"])
df.plot.box()

#Salary by Major
df = pd.read_csv("survey_results_public.csv")
df = df.dropna()
df = df[df["ConvertedComp"]  < 200000]


plt.scatter(y = df["UndergradMajor"], x = df["ConvertedComp"])
plt.xticks(rotation=90)

#Salary by Degree
df = pd.read_csv("survey_results_public.csv")
df = df.dropna()
df = df[df["ConvertedComp"]  < 200000]
df = df[df["ConvertedComp"]  > 50000]



plt.scatter(y = df["EdLevel"], x = df["ConvertedComp"])
plt.xticks(rotation=90)