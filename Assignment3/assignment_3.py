# -*- coding: utf-8 -*-
"""Assignment #3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fiT4KatC8ruUH8nu9LR2WqlMStRy_okI
"""

# 1. grades.csv: 

from google.colab import files
uploaded = files.upload()

# 1. grades.csv: (1) a boxplot for weighted_total column.

import pandas as pd
import matplotlib.pyplot as plt
df = pd.read_csv("grades.csv", sep=',', na_values='.')

df.boxplot(column =['Weighted Total [Total Pts: up to 77.25 Percentage] |1258242'], grid = False)

# 1. grades.csv: (2) a multiple bar graph for 5 homework assignments for compare and contrast of studentsâ€™ performance in these 5 assignments.
import numpy as np

bar = pd.DataFrame(df, columns=['Homework 1 [Total Pts: 20 Score] |1293619', 'Homework 2 [Total Pts: 20 Score] |1297002', 'Homework 3 [Total Pts: 20 Score] |1301007', 'Homework 4 [Total Pts: 20 Score] |1308148', 'Homework 5 [Total Pts: 20 Score] |1311965']).head(5)
bar.plot.bar()

# 1. grades.csv: (3) a graph of your choice: Line graph of midterm grades

df.plot(y='Midterm [Total Pts: 100 Score] |1302009')

# 2. SP500 index stock data:

from google.colab import files
uploaded = files.upload()

# 2. SP500 index stock data: (1) a multiple-line graph (or other appropriate graph of your choice) to compare and contrast the performance Apple Inc.(AAPL) and Microsoft (MSFT) over a period of time provided in the data set. Use the stock close price.

df = pd.read_csv("SP500_ind.csv", sep=',', na_values='.')

stock = df[(df['Symbol']=='AAPL')|(df['Symbol']=='MSFT')]
stock['Date'] = pd.to_datetime(stock['Date'], format='%Y%m%d')

stock.set_index('Date', inplace=True)
stock.groupby('Symbol')['Close'].plot(legend=True)

# 2. SP500 index stock data: (2) an area plot graph (or other appropriate graph of your choice) to compare and contrast the trading volume of the above two companies.

stock.groupby('Symbol')['Volume'].plot(legend=True)

# 2. SP500 index stock data: (3)  a graph of your choice that compares at least three companies in certain way of your choice: Line graph

three = df[(df['Symbol']=='A')|(df['Symbol']=='AA')|(df['Symbol']=='ABC')]
three['Date'] = pd.to_datetime(three['Date'], format='%Y%m%d')

three.set_index('Date', inplace=True)
three.groupby('Symbol')['Close'].plot(legend=True)